---
- hosts: localhost
  vars:
    installer:  "{{ base_dir }}/bin/openshift-install --dir {{ stage_dir }}" 
  tasks:

    - name: Creates directory
      file:
        path:  "{{ stage_dir }}"
        state: directory

    - name: regen install-config 
      copy:
        src:  "{{ base_dir }}/files/install-config.yaml.orig"
        dest: "{{ stage_dir }}/install-config.yaml"

    - name: validate install-config
      command: "{{ installer }} create install-config"
      environment:
        OS_CLOUD: fsi-moc

    - name: adjust install config
      command: "{{ base_dir }}/bin/adjust_install_config.py"
      args:
        chdir:  "{{ stage_dir }}"

    - name: create manifests
      command: "{{ installer }} create manifests"
      environment:
         OS_CLOUD: fsi-moc


    - name: remove machines and machinesets
      file:
        path: "{{ stage_dir }}/openshift/{{ item }}"
        state: absent
      with_items:
        -  99_openshift-cluster-api_master-machines-0.yaml
        -  99_openshift-cluster-api_master-machines-1.yaml
        -  99_openshift-cluster-api_master-machines-2.yaml
        -  99_openshift-cluster-api_worker-machineset-0.yaml

    - name: control-plane nodes unschedulable
      command: "{{ base_dir }}/bin/unschedulable_control.py"
      args:
        chdir:  "{{ stage_dir }}"

    - name: generate ignition files
      command: "{{ installer }} create ignition-configs"
      environment:
        OS_CLOUD: fsi-moc

    - name: register infraId
      shell: jq -r .infraID metadata.json
      register: INFRA_ID
      args:
        chdir:  "{{ stage_dir }}"

    - name: modify bootstrap
      command: "{{ base_dir }}/bin/mod_bootstrap.py"
      args:
        chdir:  "{{ stage_dir }}"
      environment:
        INFRA_IDS: "{{ INFRA_ID }}"

